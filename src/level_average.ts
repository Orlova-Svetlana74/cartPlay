import { CardListData } from './cardList.js';
import { APP_CONTAINER } from './index.js';
export function renderLevel2Block() {
  const gameSection = document.createElement('section');
  gameSection.classList.add('gamesection');
  APP_CONTAINER.appendChild(gameSection);

  const header = document.createElement('div');
  header.classList.add('header');
  gameSection.appendChild(header);

  const gameField = document.createElement('div');
  gameField.classList.add('gamefield');
  gameSection.appendChild(gameField);

  interface Card {
    id: number;
    elem: string;
    src: string;
    cardShirt: string;
  }
  const array: Array<Card> = [];
  for (let i = 0; i < 6; i++) {
    const random = Math.floor(Math.random() * CardListData.length);
    array.push(CardListData[random]);
  }

  const arrayNew: Array<Card> = array.concat(array);

  console.log(arrayNew);
  function shuffle(arrayNew:any) {
    let currentIndex = arrayNew.length;
    let temporaryValue;
    let randomIndex;
    while (currentIndex !== 0) {
      randomIndex = Math.floor(Math.random() * currentIndex);
      currentIndex -= 1;
      temporaryValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = temporaryValue;
    }
    return arrayNew;
  }

  shuffle(arrayNew);
  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä
  let moves = 0;
  let firstCard:HTMLElement;
  let secondCard:HTMLElement;
  let isCardFlipped = false;
  function flipCard(this:HTMLElement) {
    console.log('flipping card');
    // –ï—Å–ª–∏ —É–∂–µ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    if (firstCard === this) return;
    // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∞ –Ω–∏ —Ä–∞–∑—É –Ω–µ –±—ã–ª–∞ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞, —Ç–æ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞
    if (!isCardFlipped) {
      // –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–∞—Ä—Ç—É
      firstCard = this;
      // –ó–∞–¥–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á—Ç–æ –º—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª–∏ –∫–∞—Ä—Ç—É
      isCardFlipped = true;
      // –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
      return;
    }
    // –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–¥ –¥–æ—à–µ–ª –¥–æ —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–∏
    // –∑–Ω–∞—á–∏—Ç –Ω–µ –±—ã–ª–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–∞—Ä—Ç–∞ —É–∂–µ –±—ã–ª–∞ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞ (isCardFlipped —Ä–∞–≤–µ–Ω true)
    // –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–∞–∫ –≤—Ç–æ—Ä—É—é –∫–∞—Ä—Ç—É
    secondCard = this;

    // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ flipCard, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç—É
    checkWin();
  }

  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ä—Ç—ã
  function checkWin() {
    // –°–º–æ—Ç—Ä–∏–º, –∫–∞–∫–∏–µ —É –Ω–∏—Ö data –∞—Ç—Ä–∏–±—É—Ç—ã
    console.log('check first card: ', firstCard.dataset.framework);
    console.log('check second card: ', secondCard.dataset.framework);

    let winResult = false;

    if (firstCard.dataset.framework === secondCard.dataset.framework) {
      winResult = true;

      // —Ä—É–≥–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä
    }

    console.log('üöÄ ~ file: level.js:58 ~ checkWin ~ winResult:', winResult);

    if (winResult && moves === 3) {
      moves++;
      alert('–í—ã –ø–æ–±–µ–¥–∏–ª–∏');
    } else {
      alert('–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!');
    }

    // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ
    // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–¥–ø–∏—Å—å –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏
  }
  arrayNew.forEach((card) => {
    const cardElem = document.createElement(card.elem);
    cardElem.setAttribute('src', card.src);
    // –ó–∞–¥–∞–µ–º data –∞—Ç—Ä–∏–±—É—Ç, –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ –ø—É—Ç–∏ –¥–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    cardElem.setAttribute('data-framework', card.src);

    gameField.appendChild(cardElem);

    function coupCard() {
      cardElem.setAttribute('src', card.cardShirt);
    }
    setTimeout(coupCard, 5000);
    cardElem.addEventListener('click', flipCard);
    cardElem.addEventListener('click', function () {
      cardElem.setAttribute('src', card.src);
    });
  });

  const buttonRestart = document.createElement('button');
  buttonRestart.textContent = '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ!';
  buttonRestart.classList.add('buttonrestart');
  header.appendChild(buttonRestart);

  const TopTimer = document.createElement('div');
  TopTimer.classList.add('timer');
  header.appendChild(TopTimer);

  const timerMinSec = document.createElement('div');
  timerMinSec.classList.add('timer-minsec');
  TopTimer.appendChild(timerMinSec);

  const timMin = document.createElement('P');
  timMin.textContent = 'min';
  timMin.classList.add('min-sec');
  timerMinSec.appendChild(timMin);

  const timSec = document.createElement('P');
  timSec.textContent = 'sec';
  timSec.classList.add('min-sec');
  timerMinSec.appendChild(timSec);

  const TimerNumber = document.createElement('P');
  TimerNumber.textContent = '00.00';
  TimerNumber.classList.add('timer-number');
  TopTimer.appendChild(TimerNumber);
}
